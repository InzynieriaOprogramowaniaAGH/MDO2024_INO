pipeline {
  agent any
  environment {
    VERSION = '1.0.0'
    LOG_DIR = "/tmp/build_${BUILD_NUMBER}"
    REPO = "https://github.com/InzynieriaOprogramowaniaAGH/MDO2024_INO"
    SRC_DIR = "repo/ITE/GCL4/SP411320/Sprawozdanie3/src/irssi"
    USER = 'pixel48'
  }
  stages {
    stage('Prep') {
      steps {
        sh 'echo ===[Prep]==='
        sh "mkdir -p $LOG_DIR"
        sh 'rm -rfv repo || true'
        sh 'docker rm $(docker ps -aq) || true'
        sh 'docker rmi $(docker images -q) || true'
      }
    }
    stage('Clone') {
      steps {
        sh 'echo ===[Clone]==='
        sh "git clone -b SP411320 --single-branch $REPO repo"
      }
    }
    stage('Build') {
      steps {
        sh 'echo ===[Build]==='
        dir("$SRC_DIR") {
          sh "docker build -t irssi-build --no-cache - < build.Dockerfile 2>&1 | tee $LOG_DIR/docker_build-${BUILD_NUMBER}.log"
        }
      }
    }
    stage('Test') {
      steps {
        sh 'echo ===[Test]==='
        dir("$SRC_DIR") {
          sh "docker build --no-cache -t irssi-test - < test.Dockerfile  | tee $LOG_DIR/docker_build_test-${BUILD_NUMBER}.log"
        }
      }
    }
    stage('Deploy') {
      steps {
        sh 'echo ===[Deploy]==='
        sh 'docker run --rm --name irssi-build -tde TERM=xterm irssi-build'
        sh "docker ps > $LOG_DIR/docker_ps-${BUILD_NUMBER}.log"
        sh 'docker stop irssi-build'
      }
    }
    stage('Publish') {
      environment {
        DOCKER_TOKEN = credentials('DOCKER_TOKEN')
      }
      steps {
        sh 'echo ===[Publish]==='
        sh "docker login -u $USER -p $DOCKER_TOKEN"
        sh "docker tag irssi-build $USER/irssi:$VERSION"
        sh "docker push $USER/irssi:$VERSION"
      }
    }
    stage('Collect') {
      steps {
        sh 'echo ===[Collect]==='
        dir("$LOG_DIR") {

        }
        archiveArtifacts artifacts: "$LOG_DIR/*${BUILD_NUMBER}"
      }
    }
    stage('Cleanup') {
      steps {
        sh 'echo ===[Cleanup]==='
        sh 'docker rm $(docker ps -aq) || true'
        sh 'dokeer rmi $(docker images -q) || true'
        sh 'docker logout || true'
      }
    }
  }
}
